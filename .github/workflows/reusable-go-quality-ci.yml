on:
  workflow_call:
    inputs:
      target:
        description: The target project to run the check against.
        required: true
        type: string

    secrets:
      SEMGREP_APP_TOKEN:
        required: true
      CODECOV_TOKEN:
        required: true

jobs:
  download-module:
    name: Download go module
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.target }}
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22.x
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Download module
        run: go mod download
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-module-${{ github.repository }}-${{ inputs.target }}-${{ github.sha }}
          restore-keys: |
            go-module-${{ github.repository }}-${{ inputs.target }}-${{ github.sha }}

  import-lint:
    name: Lint import block
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    container:
      image: indrasaputra/protogen:2024-07-13
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Check import blocks
        run: |
          make format
          make check.import

  security-check:
    name: Semgrep scan
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Scan using Semgrep
        run: semgrep ci
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}

  go-code-lint:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22.x
      - name: Lint using golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.63.4
          args: --config=${GITHUB_WORKSPACE}/.golangci.yml
          working-directory: ${{ inputs.target }}

  unit-test-coverage:
    name: Unit test and coverage
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ^1.22.x
      - name: Clone repository
        uses: actions/checkout@v4
      # TODO: move this after lint
      - name: Cache vendor
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-module-${{ github.repository }}-${{ inputs.target }}-${{ github.sha }}
          restore-keys: |
            go-module-${{ github.repository }}-${{ inputs.target }}-${{ github.sha }}
      - name: Run unit test and coverage
        run: make test.cover svc=${{ inputs.target }}
      - name: Push coverage result to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
